<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Finance_Manager_Backend</name>
    </assembly>
    <members>
        <member name="M:Finance_Manager_Backend.Controllers.AdministratorController.GetCategoryById(System.Int32)">
            <summary>
            Get category by id.
            </summary>
            <param name="id">Category id.</param>
            <returns>Returns CategoryDTO object.</returns>
            <response code="200">Success.</response>
            <response code="404">Not found category.</response>     
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AdministratorController.CreateAllCategories">
            <summary>
            Create all categories and seed them in data base.
            </summary>
            <returns>Ok</returns>
            <response code="204">Success.</response>
            <response code="403">Authorization failed.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AdministratorController.CreateCategory(Finance_Manager_Backend.BusinessLogic.Models.DTOs.CategoryDTO)">
            <summary>
            Create category.
            </summary>
            <param name="categoryDTO">CategoryDTO to create.</param>
            <returns>Returns the ID of the created category.</returns>
            <response code="201">Category successfully created.</response>
            <response code="400">Validation failed.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="403">Authorization failed.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AdministratorController.UpdateCategory(Finance_Manager_Backend.BusinessLogic.Models.DTOs.CategoryDTO)">
            <summary>
            Update category.
            </summary>
            <param name="categoryDTO">New categoryDTO object.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="403">Authorization failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AdministratorController.DeleteCategory(System.Int32)">
            <summary>
            Delete category by id.
            </summary>
            <param name="id">Category id.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="403">Authorization failed.</response>
            <response code="404">Not found category.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AnalyticsController.GetAnalytics(Finance_Manager_Backend.BusinessLogic.Models.DTOs.AnalyticsQueryDTO)">
            <summary>
            Get spending analytics in date range.
            </summary>
            <param name="queryDTO">QueryDTO with parameters:
            userId - User id;
            minDate - Start date of the filter range;
            maxDate - End date of the filter range.</param>
            <returns>
            Returns spending analytics grouped by category in a given date range.
            Each result shows the category and the percentage of total spending it represents.
            For example: { "Home" → 32.5, "Transport" → 15.0 }.
            </returns>
            <response code="200">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AnalyticsController.GetInnerAnalytics(Finance_Manager_Backend.BusinessLogic.Models.DTOs.InnerAnalyticsQueryDTO)">
            <summary>
            Get spending analytics from general category in date range.
            </summary>
            <param name="queryDTO">QueryDTO with parameters:
            parentCategoryId - Id parent category, that inner stats want to know;
            userId - User id;
            minDate - Start date of the filter range;
            maxDate - End date of the filter range.</param>
            <returns>
            Returns spending analytics grouped by category in a given date range.
            Each result shows the category and the percentage of total spending it represents.
            For example: { "Rent" → 32.5, "Furniture" → 15.0 }.
            </returns>
            <response code="200">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AuthController.Register(Finance_Manager_Backend.BusinessLogic.Models.DTOs.AuthDataDTO)">
            <summary>
            Register new user.
            </summary>
            <param name="authDataDTO">AuthDataDTO with email and password</param>
            <returns>AuthUserTokensDTO with parameters:
            UserDTO - user dto object with id, email, and balance;
            AccessJwtToken - new generated jwt token;
            RefreshToken - new generated refresh token.</returns>
            <response code="200">Success.</response>
            <response code="400">Invalid credentials.</response>    
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AuthController.Authenticate(Finance_Manager_Backend.BusinessLogic.Models.DTOs.AuthDataDTO)">
            <summary>
            Authenticate user.
            </summary>
            <param name="authDataDTO">AuthDataDTO with email and password</param>
            <returns>AuthUserTokensDTO with parameters:
            UserDTO - user dto object with id, email, and balance;
            AccessJwtToken - new generated jwt token;
            RefreshToken - new generated refresh token.</returns>
            <response code="200">Success.</response>
            <response code="400">Invalid credentials.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.AuthController.RefreshToken(System.String)">
            <summary>
            Authenticate user with refresh token.
            </summary>
            <param name="refreshToken">Refresh token.</param>
            <returns>AuthUserTokensDTO with parameters:
            UserDTO - user dto object with id, email, and balance;
            AccessJwtToken - new generated jwt token;
            RefreshToken - new generated refresh token.</returns>    
            <response code="200">Success.</response>
            <response code="400">Invalid refresh token.</response>
            <response code="404">User with this token not found.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.CategoriesController.GetCategoryById(System.Int32)">
            <summary>
            Get category by id.
            </summary>
            <param name="id">Category id.</param>
            <returns>Returns CategoryDTO object.</returns>
            <response code="200">Success.</response>
            <response code="404">Not found category.</response>     
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.CategoriesController.GetAllCategories">
            <summary>
            Get list of all categories.
            </summary>
            <returns>Returns list woth categoryDTO objects.</returns>
            <response code="200">Success.</response>    
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.SavingsController.CreateSaving(Finance_Manager_Backend.BusinessLogic.Models.DTOs.SavingDTO)">
            <summary>
            Create saving.
            </summary>
            <param name="savingDTO">The savingDTO to create.</param>
            <returns>Returns the ID of the created saving.</returns>
            <response code="201">Saving successfully created.</response>
            <response code="400">Validation failed.</response>
            <response code="404">User not found.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.SavingsController.GetSavingById(System.Int32)">
            <summary>
            Get saving by id.
            </summary>
            <param name="id">Saving id.</param>
            <returns>Returns savingDTO object.</returns>
            <response code="200">Success.</response>
            <response code="404">Not found saving.</response>     
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.SavingsController.GetSavings(Finance_Manager_Backend.BusinessLogic.Models.DTOs.GetUserSavingsQueryDTO)">
            <summary>
            Get list of savings.
            </summary>
            <param name="queryDTO">QueryDTO with parameters:
            userId - User id that want to get his savings;
            previousSavingId - Last saving id from which savings must be loaded;
            pageSize - Amount of savings.</param>
            <returns>Returns list with savingsDTO objects.</returns>
            <response code="200">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.SavingsController.UpdateSaving(Finance_Manager_Backend.BusinessLogic.Models.DTOs.SavingTopUpDTO)">
            <summary>
            Update saving with new top up.
            </summary>
            <param name="topUpDTO">TopUpDTO with parameters:
            savingId - Saving id;
            topUpAmount - Amount of top up.</param>
            <response code="204">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.SavingsController.DeleteSaving(System.Int32)">
            <summary>
            Delete saving by id.
            </summary>
            <param name="id">Saving id.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="404">Not found saving.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.TransactionsController.CreateTransaction(Finance_Manager_Backend.BusinessLogic.Models.DTOs.TransactionDTO)">
            <summary>
            Create transaction.
            </summary>
            <param name="transactionDTO">The transactionDTO to create.</param>
            <returns>Returns the ID of the created transaction.</returns>
            <response code="201">Transaction successfully created.</response>
            <response code="400">Validation failed.</response>
            <response code="404">User not found.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.TransactionsController.GetTransactionById(System.Int32)">
            <summary>
            Get transaction by id.
            </summary>
            <param name="id">Transaction id.</param>
            <returns>Returns transaction object.</returns>
            <response code="200">Success.</response>
            <response code="404">Not found transaction.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.TransactionsController.GetTransactions(Finance_Manager_Backend.BusinessLogic.Models.DTOs.GetUserTransactionsQueryDTO)">
            <summary>
            Get list of transactions.
            </summary>
            <param name="queryDTO">QueryDTO with:
            userId - User id; 
            lastDate - Last date from which transactions must be loaded(null if from first);
            pageSize - Amount of transactions.</param>
            <returns>Returns list with transactionDTO objects.</returns>
            <response code="200">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.TransactionsController.UpdateTransaction(Finance_Manager_Backend.BusinessLogic.Models.DTOs.TransactionDTO)">
            <summary>
            Update transaction with new data.
            </summary>
            <param name="transactionDTO">New transactionDTO object.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.TransactionsController.DeleteTransaction(System.Int32)">
            <summary>
            Delete transaction by id.
            </summary>
            <param name="id">Transaction id.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="404">Not found transaction.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.UserController.GetBalanceById(System.Int32)">
            <summary>
            Get user balance by id.
            </summary>
            <param name="id">User id.</param>
            <returns>Returns UserBalanceDTO with parameters: 
            PrimaryBalance - object with currency code and balance in primary currency; 
            SecondaryBalance1 - object with currency code and balance converted from primary to this; 
            SecondaryBalance2 - object with currency code and balance converted from primary to this.</returns>
            <response code="200">Success.</response>
            <response code="404">Not found user.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="M:Finance_Manager_Backend.Controllers.UserController.UpdateCurrency(Finance_Manager_Backend.BusinessLogic.Models.DTOs.UpdateUserCurrencyQueryDTO)">
            <summary>
            Update user currency.
            </summary>
            <param name="currencyQueryDTO">currencyQueryDTO with parameters:
            UserId - user id;
            CurrencyRang - rang of currency that will be update, can be "Primary", "Secondary1" or "Secondary2".
            CurrencyCode - code for this currency.</param>
            <returns>Returns NoContent</returns>
            <response code="204">Success.</response>
            <response code="400">Validation failed.</response>
            <response code="404">Not found some resource.</response>
            <response code="401">Not authorized. Possible invalid token.</response>
            <response code="500">Internal server error.</response> 
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.InitializeDb">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.InitializeDb.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.InitializeDb.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.InitializeDb.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.ChangedPasswordToHashWithSalt">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedPasswordToHashWithSalt.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedPasswordToHashWithSalt.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedPasswordToHashWithSalt.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.UpdateCategoryWithIsIncomeCheck">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.UpdateCategoryWithIsIncomeCheck.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.UpdateCategoryWithIsIncomeCheck.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.UpdateCategoryWithIsIncomeCheck.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.ChangedCurrentAmountInSavingsToNotNullableDecimal">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedCurrentAmountInSavingsToNotNullableDecimal.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedCurrentAmountInSavingsToNotNullableDecimal.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedCurrentAmountInSavingsToNotNullableDecimal.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.ChangedParentCategoryIdColumnNameToparent_category_fk">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedParentCategoryIdColumnNameToparent_category_fk.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedParentCategoryIdColumnNameToparent_category_fk.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.ChangedParentCategoryIdColumnNameToparent_category_fk.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.AddedCurrencyToUser">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedCurrencyToUser.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedCurrencyToUser.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedCurrencyToUser.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.AddedRolesForUsers">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedRolesForUsers.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedRolesForUsers.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedRolesForUsers.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.CreatedRefreshTokensTable">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.CreatedRefreshTokensTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.CreatedRefreshTokensTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.CreatedRefreshTokensTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Finance_Manager_Backend.Migrations.AddedDefaultInitializationForDecimalProperties">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedDefaultInitializationForDecimalProperties.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedDefaultInitializationForDecimalProperties.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Finance_Manager_Backend.Migrations.AddedDefaultInitializationForDecimalProperties.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
